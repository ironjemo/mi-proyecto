
# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  name: Projectpool

steps:
- task: Maven@3
  displayName: 'Maven build and test'
  inputs:
    mavenPomFile: 'pom.xml'  # Si el pom.xml está en la raíz del repositorio
    mavenHome: 'C:\Users\megam\OneDrive\Escritorio\apache-maven-3.9.9-bin\apache-maven-3.9.9'  # Ruta correcta de Maven
    goals: 'clean install'  # Los objetivos de Maven que quieres ejecutar
    codeCoverageToolOption: 'Cobertura'  # Herramienta de cobertura (Cobertura en este caso)


- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/target'  # Asumiendo que los archivos .jar están en la carpeta target
    Contents: '**/*.jar'  # Copiar todos los archivos .jar generados
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    preserveTimestamp: true
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'  # La carpeta donde se copiaron los .jar
    ArtifactName: 'drop'
    publishLocation: 'Container'
  condition: succeededOrFailed()
